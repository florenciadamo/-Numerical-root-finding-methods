#One such method is the Method of False Position. Here, we start with an initial interval [x1,x2], and we assume that the function changes sign
#only once in this interval. Now we find an x3 in this interval, which is given by the intersection of the x axis and the straight line passing through 
#(x1,f(x1)) and (x2,f(x2)). 
#Now, we choose the new interval from the two choices [x1,x3] or [x3,x2] depending on in which interval the function changes sign.


fn <- function(x) #Funcion 
{  f <- x^4 - 4*x - 10
return(f)}

falsa_posicion <- function(p0, p1, tol, n)
{
  if(fn(p0)*fn(p1) < 0)
  {
    #Paso 1
    i = 2
    q0 = fn(p0)
    q1 = fn(p1)
    #Paso 2
    while(i <= n)
    {
      #Paso 3
      p = p1 -(q1*(p1 - p0))/(q1 - q0)
      #Paso 4
      if(abs(p - p1) < tol)
      {
        return(p)
      }
      #Paso 5
      i = i + 1
      q = fn(p)
      #Paso 6
      if(q * q1 < 0)
      {
        p0 = p1
        q0 = q1
      }
      #Paso 7
      p1 = p
      q1 = q
    }
    #Paso 8
    return(paste('El metodo fallo luego de ', n, 'iteraciones'))
  } else 
    return("No se cumple el teorema de bolzano")
}
f = falsa_posicion(3.1, 3.0, 0.0001, 100)
print(f)
